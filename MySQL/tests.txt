#Section D:  Game Session
#Notes:  A locomotive is selected to declare a new train will exist,
#	originating on a particular module.  Available rolling stock for trains are
#	identified and must be assigned to an originating yard or industry.
#	Shipment orders are created on demand based off of current layout and
#	industry parameters.  For each rolling stock car, waybills must be
#	associated with a shipping order before that car is consisted to a train.
#	For each train, crews are declared and then assigned to a train.  The train
#	and player are then considered to be ready for game play.
#
#Expected Insertion Order:
#Declare Trains
#Declare TrainLocations for Trains
#Declare RollingStockCars
#Declare Shipments
#Declare Waybills for Shipments on RollingStockCars
#Declare ConsistedCars for Trains using RollingStockCars
#Declare Crews
#Declare TrainCrews for Crews on Trains

#Test uspClientAddTrain
CALL uspClientAddTrain(1, 1234, 1234, 'Black River Yard');
CALL uspClientAddTrain(2, 5555, 5555, 'Black River Yard');
CALL uspClientAddTrain(3, 333, 333, 'Black River Yard'); 
CALL uspClientAddTrain(1, 1234, 1234, 'Black River Yard'); -- This train already exists.
CALL uspClientAddTrain(4, 1234, 1234, 'Unknown'); -- This module does not exist or is not active.
DELETE FROM Trains WHERE TrainNumber = 1;
DELETE FROM Trains WHERE TrainNumber = 2;
DELETE FROM Trains WHERE TrainNumber = 3;

#Test uspClientRemoveTrain
CALL uspClientAddTrain(1, 1234, 1234, 'Black River Yard');
CALL uspClientAddTrain(2, 5555, 5555, 'Black River Yard');
CALL uspClientAddTrain(3, 333, 333, 'Black River Yard');
CALL uspClientRemoveTrain(2);
CALL uspClientRemoveTrain(3);
INSERT INTO RollingStockCars VALUES ('XX', 'Box Car');
INSERT INTO ConsistedCars VALUES (1, 'XX', DEFAULT);
CALL uspClientRemoveTrain(2); -- Train not found.
CALL uspClientRemoveTrain(1); -- Train has remaining consisted cars.
DELETE FROM ConsistedCars WHERE TrainNumber = 1 AND CarID = 'XX';
DELETE FROM RollingStockCars WHERE CarID = 'XX';
CALL uspClientRemoveTrain(1);

#Test uspClientModifyTrain
CALL uspClientAddTrain(1, 2222, 2222, 'Black River Yard');
CALL uspClientModifyTrain(1, 1111, 1111);
CALL uspClientModifyTrain(2, 1111, 1111); -- Train not found.
CALL uspClientRemoveTrain(1);

#Test uspClientAddCarToGame
CALL uspClientAddCarToGame('XX', 'Box Car', 'Black River Yard');
CALL uspClientAddCarToGame('YY', 'Box Car', 'Black River Yard');
CALL uspClientAddCarToGame('XX', 'Box Car', 'Black River Yard'); -- This car already exists.
CALL uspClientAddCarToGame('ZZ', 'Unknown', 'Black River Yard'); -- This car type does not exist.
CALL uspClientAddCarToGame('ZZ', 'Box Car', 'Unknown'); -- This yard does not exist.
DELETE FROM RollingStockCars WHERE CarID = 'XX';
DELETE FROM RollingStockCars WHERE CarID = 'YY';

#Test uspClientRemoveCarFromGame
CALL uspClientAddCarToGame('XX', 'Box Car', 'Black River Yard');
CALL uspClientAddCarToGame('YY', 'Box Car', 'Black River Yard');
CALL uspClientAddCarToGame('ZZ', 'Reefer', 'Black River Yard');
CALL uspClientAddTrain(1, 1234, 1234, 'Black River Yard');
INSERT INTO Shipments VALUES (DEFAULT, 'Dairy', 'Half Circle Farms', 1, 'MMI Transfer Site 3', 1, DEFAULT);
INSERT INTO Waybills VALUES ('ZZ', LAST_INSERT_ID(), 'Black River Yard');
INSERT INTO ConsistedCars VALUES (1, 'ZZ', DEFAULT);
DELETE FROM RollingStockAtYards WHERE CarID = 'ZZ';
CALL uspClientRemoveCarFromGame('XX');
CALL uspClientRemoveCarFromGame('YY');
CALL uspClientRemoveCarFromGame('YY'); -- Car not found.
CALL uspClientRemoveCarFromGame('ZZ'); -- Car is consisted to a train and cannot be removed.
DELETE FROM ConsistedCars WHERE TrainNumber = 1 AND CarID = 'ZZ';
CALL uspClientRemoveCarFromGame('ZZ'); -- Car has existing waybill and cannot be removed.
DELETE FROM Waybills WHERE CarID = 'ZZ';
CALL uspClientRemoveCarFromGame('ZZ');
SET FOREIGN_KEY_CHECKS = 0;
TRUNCATE TABLE Shipments;
SET FOREIGN_KEY_CHECKS = 1;

#Test ufnGetProductType
SELECT ufnGetProductType('Box Car');

#Test ufnGetProducingIndustry
SELECT ufnGetProducingIndustry(75, 'Garbage');

#Test ufnGetIndustrySiding
SELECT ufnGetIndustrySiding('MMI Transfer Site 3', 'General Merchandise');

#Test ufnGetConsumingIndustry
SELECT ufnGetConsumingIndustry(65, 'Crates');

#Test uspClientAddCarToService
CALL uspClientAddCarToGame('AA', 'Box Car', 'Black River Yard');
CALL uspClientAddCarToGame('BB', 'Box Car', 'Black River Yard');
CALL uspClientAddCarToGame('CC', 'Box Car', 'Black River Yard');
CALL uspClientAddCarToGame('DD', 'Wood Chip Car', 'Black River Yard');
CALL uspClientAddCarToGame('EE', 'Stock Car', 'Black River Yard');
CALL uspClientAddCarToGame('FF', 'Stock Car', 'Black River Yard');
CALL uspClientAddCarToService('AA');
CALL uspClientAddCarToService('BB');
CALL uspClientAddCarToService('CC');
CALL uspClientAddCarToService('XX'); -- This car could not be found.
CALL uspClientAddCarToService('CC'); -- This car is already in service.
CALL uspClientAddCarToService('DD'); -- There are no industry orders for this car type on this layout.
CALL uspClientAddCarToService('EE');
UPDATE IndustrySidings SET AvailableLength = 0 WHERE IndustryName = 'Half Circle Farms' AND SidingNumber = 1;
CALL uspClientAddCarToService('FF'); -- There are no industry orders at this time.
UPDATE IndustrySidings SET AvailableLength = 600 WHERE IndustryName = 'Half Circle Farms' AND SidingNumber = 1;
UPDATE IndustrySidings SET AvailableLength = 0 WHERE IndustryName = 'Palin Interchange' AND SidingNumber = 1;
CALL uspClientAddCarToService('FF'); -- There are no industry orders at this time.
UPDATE IndustrySidings SET AvailableLength = 500 WHERE IndustryName = 'Palin Interchange' AND SidingNumber = 1;
CALL uspClientAddCarToService('FF');
SET FOREIGN_KEY_CHECKS = 0;
TRUNCATE TABLE Shipments;
TRUNCATE TABLE Waybills;
SET FOREIGN_KEY_CHECKS = 1;
CALL uspClientRemoveCarFromGame('AA');
CALL uspClientRemoveCarFromGame('BB');
CALL uspClientRemoveCarFromGame('CC');
CALL uspClientRemoveCarFromGame('DD');
CALL uspClientRemoveCarFromGame('EE');
CALL uspClientRemoveCarFromGame('FF');

#uspClientRemoveCarFromService
CALL uspClientAddCarToGame('AA', 'Box Car', 'Black River Yard');
CALL uspClientAddCarToGame('BB', 'Box Car', 'Black River Yard');
CALL uspClientAddCarToGame('CC', 'Box Car', 'Black River Yard');
CALL uspClientAddCarToGame('DD', 'Box Car', 'Black River Yard');
CALL uspClientAddCarToService('AA');
CALL uspClientAddCarToService('BB');
CALL uspClientAddCarToService('CC');
CALL uspClientRemoveCarFromService('AA');
CALL uspClientRemoveCarFromService('BB');
CALL uspClientRemoveCarFromService('XX'); -- This car could not be found.
CALL uspClientRemoveCarFromService('DD'); -- This car is not in service.
SET @shippingNo = (SELECT ShipmentID FROM Waybills WHERE CarID = 'CC');
INSERT INTO ShipmentsLoaded VALUES (@shippingNo, DEFAULT);
CALL uspClientRemoveCarFromService('CC'); -- Car has open waybill and cannot be removed.
INSERT INTO ShipmentsUnloaded VALUES (@shippingNo, DEFAULT);
CALL uspClientRemoveCarFromService('CC');
SET FOREIGN_KEY_CHECKS = 0;
TRUNCATE TABLE Shipments;
TRUNCATE TABLE ShipmentsLoaded;
TRUNCATE TABLE ShipmentsUnloaded;
SET FOREIGN_KEY_CHECKS = 1;
CALL uspClientRemoveCarFromGame('AA');
CALL uspClientRemoveCarFromGame('BB');
CALL uspClientRemoveCarFromGame('CC');
CALL uspClientRemoveCarFromGame('DD');

#uspClientModifyCarInService
CALL uspClientAddCarToGame('AA', 'Box Car', 'Black River Yard');
CALL uspClientAddCarToGame('BB', 'Box Car', 'Black River Yard');
CALL uspClientAddCarToGame('CC', 'Box Car', 'Black River Yard');
CALL uspClientAddCarToGame('DD', 'Stock Car', 'Black River Yard');
CALL uspClientAddCarToService('AA');
CALL uspClientAddCarToService('CC');
CALL uspClientModifyCarInService('AA', 'BB');
CALL uspClientRemoveCarFromService('AA'); -- This car is not in service.
CALL uspClientModifyCarInService('BB', 'AA');
CALL uspClientRemoveCarFromService('BB'); -- This car is not in service.
CALL uspClientModifyCarInService('XX', 'BB'); -- Originating carID not found.
CALL uspClientModifyCarInService('AA', 'XX'); -- Replacement carID not found.
CALL uspClientModifyCarInService('AA', 'CC'); -- Replacement carID has existing waybill.
CALL uspClientModifyCarInService('AA', 'DD'); -- Replacement car type does not match original car type.
SET FOREIGN_KEY_CHECKS = 0;
TRUNCATE TABLE Shipments;
SET FOREIGN_KEY_CHECKS = 1;
CALL uspClientRemoveCarFromService('AA');
CALL uspClientRemoveCarFromService('CC');
CALL uspClientRemoveCarFromGame('AA');
CALL uspClientRemoveCarFromGame('BB');
CALL uspClientRemoveCarFromGame('CC');
CALL uspClientRemoveCarFromGame('DD');

#ufnGetCarModuleName('CarID')
CALL uspClientAddCarToGame('AA', 'Box Car', 'Black River Yard');
DELETE FROM RollingStockAtYards WHERE CarID = 'AA';
CALL uspClientAddCarToGame('BB', 'Box Car', 'Black River Yard');
CALL uspClientAddCarToGame('CC', 'Box Car', 'Black River Yard');
DELETE FROM RollingStockAtYards WHERE CarID = 'CC';
INSERT INTO RollingStockAtIndustries VALUES ('CC', 'Half Circle Farms', 1, DEFAULT);
CALL uspClientAddCarToGame('DD', 'Box Car', 'Black River Yard');
CALL uspClientAddTrain(1, 1234, 1234, 'Black River Yard');
DELETE FROM RollingStockAtYards WHERE CarID = 'DD';
INSERT INTO ConsistedCars VALUES (1, 'DD', DEFAULT);
UPDATE TrainLocations SET ModuleName = 'Chesterfield' WHERE TrainNumber = 1;
SELECT ufnGetCarModuleName('AA'), ufnGetCarModuleName('BB'), ufnGetCarModuleName('CC'), ufnGetCarModuleName('DD'); -- NULL, Black River Yard, 180 Farms, Chesterfield
CALL uspClientRemoveCarFromGame('AA');
CALL uspClientRemoveCarFromGame('BB');
CALL uspClientRemoveCarFromGame('CC');
DELETE FROM ConsistedCars WHERE CarID = 'DD';
CALL uspClientRemoveTrain(1);
CALL uspClientRemoveCarFromGame('DD');